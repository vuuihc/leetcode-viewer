{"javascript":"/**\r\n * @param {string} digits\r\n * @return {string[]}\r\n */\r\nvar letterCombinations = function(digits) {\r\n    let map = {\r\n        1:\"*\",\r\n        2:\"abc\",\r\n        3:\"def\",\r\n        4:\"ghi\",\r\n        5:\"jkl\",\r\n        6:\"mno\",\r\n        7:\"pqrs\",\r\n        8:\"tuv\",\r\n        9:\"wxyz\"\r\n    },\r\n    result=[];\r\n    let recursive = (parentStr,remainDigit)=>{\r\n        if(remainDigit.length===0){\r\n            if(parentStr.length!==0){\r\n                result.push(parentStr);   \r\n            }\r\n            return;\r\n        }\r\n        let curChars = map[remainDigit[0]];\r\n        for(let i = 0;i<curChars.length;i++){\r\n            recursive(parentStr+curChars[i],remainDigit.slice(1));\r\n        }\r\n    }\r\n    recursive(\"\",digits);\r\n    return result;\r\n};"}