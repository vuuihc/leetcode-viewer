{"javascript":"/**\r\n * @param {number[]} nums\r\n * @param {number} target\r\n * @return {number[][]}\r\n */\r\nvar fourSum = function(nums, target) {\r\n    let threeSum = (nums,low,high,target,result,cur)=>{\r\n        if(low+2>high) return;\r\n        if(nums[low]*3>target || nums[high]*3<target) return;\r\n        for(let i=low;i<high;i++){\r\n            if(i>low && nums[i]===nums[i-1]) continue;\r\n            if(nums[i]+nums[high]*2<target) continue;\r\n            if(nums[i]*3>target) break;\r\n            if(nums[i]*3===target && nums[i+2]===nums[i]){\r\n                result.push([cur,nums[i],nums[i],nums[i]]);\r\n                break;\r\n            }\r\n            twoSum(nums,i+1,high,target-nums[i],result,cur,nums[i]);\r\n        }\r\n    }\r\n    let twoSum = (nums,low,high,target,result,cur1,cur2)=>{\r\n        if(low+1>high) return;\r\n        if(nums[low]*2>target || nums[high]*2<target) return;\r\n        while(low<high){\r\n            let curSum=nums[low]+nums[high]\r\n            if(curSum===target){\r\n                result.push([cur1,cur2,nums[low],nums[high]]);\r\n                // console.log(low)\r\n                while(low<high && nums[low+1]===nums[low]) low++;\r\n                while(low<high && nums[high-1]===nums[high]) high--;\r\n                low++;\r\n                high--;\r\n            }else if(curSum>target){\r\n                high--;\r\n            }else{\r\n                low++;\r\n            }\r\n        }\r\n        return;   \r\n    }\r\n    let results = [];\r\n    nums.sort((a,b)=>a-b);\r\n    console.log(nums)\r\n    let max = nums[nums.length-1];\r\n    if(nums[0]*4>target || max*4<target) return results;\r\n    for(let i=0;i<nums.length-3;i++){\r\n        if(i>0 && nums[i]===nums[i-1]) continue;\r\n        if(nums[i]+3*max<target) continue;\r\n        if(4*nums[i]>target) break;\r\n        if(4*nums[i]===target &&ã€€nums[i+3]===nums[i]){\r\n            results.push([nums[i],nums[i],nums[i],nums[i]]);\r\n            break;\r\n        }\r\n        threeSum(nums,i+1,nums.length-1,target-nums[i],results,nums[i]);\r\n    }\r\n    return results;\r\n};"}