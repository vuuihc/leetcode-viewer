{"javascript":"/**\r\n * Definition for an interval.\r\n * function Interval(start, end) {\r\n *     this.start = start;\r\n *     this.end = end;\r\n * }\r\n */\r\n/**\r\n * @param {Interval[]} intervals\r\n * @return {Interval[]}\r\n */\r\nvar merge = function(intervals) {\r\n    let quickSort = (array,index,left,right)=>{\r\n        if(left>=right) return;\r\n        let low=left,\r\n            high=right,\r\n            empty=left,\r\n            base = array[empty];\r\n        while(low<high){\r\n            while(low < high && base.start <= array[high].start){ high--; }\r\n            while(low < high && array[low].start <= base.start){ low++; }\r\n            array[empty]=array[high];\r\n            array[high]=array[low];\r\n            empty = low;\r\n        }\r\n        // console.log(base);\r\n        array[empty]=base;\r\n        quickSort(array,index,left,empty-1);\r\n        quickSort(array,index,empty+1,right);\r\n    }\r\n    quickSort(intervals,0,0,intervals.length-1);\r\n    // console.log(intervals);\r\n    let result = [],\r\n        l = intervals.length;\r\n    if(l<2) return intervals;\r\n    for(let i=0;i<l;i++){\r\n        // console.log(intervals[i]);\r\n        if(i<l-1 && intervals[i].end>=intervals[i+1].start){\r\n            intervals[i+1].start = intervals[i].start;\r\n            intervals[i+1].end = Math.max(intervals[i].end,intervals[i+1].end);\r\n        }else{\r\n            result.push(intervals[i]);\r\n        }\r\n    }\r\n    \r\n    return result;\r\n};"}