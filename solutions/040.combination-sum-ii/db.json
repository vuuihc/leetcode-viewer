{"javascript":"/**\r\n * @param {number[]} candidates\r\n * @param {number} target\r\n * @return {number[][]}\r\n */\r\nvar combinationSum2 = function(candidates, target) {\r\n    let l = candidates.length,\r\n        results = [],\r\n        flag = [];\r\n    let fixedSum = (a,n,c,sum)=>{\r\n        if(sum===0){\r\n            let result = [];\r\n            for(let i=0;i<n;i++){\r\n                if(flag[i]){\r\n                    result.push(a[i]);\r\n                }\r\n            }\r\n            results.push(result);\r\n        }else if(c===n){\r\n            return;\r\n        }else{\r\n            flag[c] = true;\r\n            if(sum-a[c]>=0){\r\n                fixedSum(a,n,c+1,sum-a[c]);\r\n            }\r\n            flag[c] = false;\r\n            if(sum>=0){\r\n                fixedSum(a,n,c+1,sum);\r\n            }\r\n        }\r\n    }\r\n    Array.prototype.sort.apply(candidates,[(a,b)=>b-a]);\r\n    console.log(candidates);\r\n    fixedSum(candidates,l,0,target);\r\n    let removedIndex = [];\r\n    Array.prototype.sort.apply(results,[(a,b)=>b.join(\"\")-a.join(\"\")])\r\n    for(let i=0;i<results.length-1;i++){\r\n        if(results[i].join(\"\")===results[i+1].join(\"\")){\r\n            removedIndex.push(i+1);\r\n        }\r\n    }\r\n    return results.filter((item,index)=>!removedIndex.includes(index));\r\n};"}