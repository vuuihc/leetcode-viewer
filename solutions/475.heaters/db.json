{"javascript":"/**\r\n * @param {number[]} houses\r\n * @param {number[]} heaters\r\n * @return {number}\r\n */\r\nvar findRadius = function(houses, heaters) {\r\n    let quickSort = (array,left,right) => {\r\n        if(left >= right){\r\n            return;\r\n        }\r\n        let low = left,high = right,curIndex = left,base = array[left];\r\n        while(low < high){\r\n            while(low < high && array[high] >= base){\r\n                high --;\r\n            }\r\n            while(low < high && array[low] <= base){\r\n                low ++;\r\n            }\r\n            array[curIndex] = array[high];\r\n            array[high] = array[low];\r\n            curIndex = low;\r\n        }\r\n        array[curIndex] = base;\r\n        quickSort(array,left,curIndex);\r\n        quickSort(array,curIndex+1,right);\r\n    }\r\n    var binarySearch = (array,key)=>{\r\n        let left=0,right=array.length-1;\r\n        while(left<right){\r\n            let middle = left + ((right - left)>>1);\r\n            if(array[middle] < key){\r\n                left = middle + 1;\r\n            }else if( array[middle] > key){\r\n                right = middle - 1;\r\n            }else{\r\n                return middle;\r\n            }\r\n        }\r\n        if(array[left]<key){\r\n            return -(left+1);\r\n        }\r\n        return -left;\r\n    }\r\n    // quickSort(heaters,0,heaters.length-1);\r\n    heaters.sort((a,b)=>a-b);\r\n    // console.log(heaters);\r\n    let result =  -1;\r\n    let max = 1e9;\r\n    for(let i=0;i<houses.length;i++){\r\n        let index = binarySearch(heaters,houses[i]);\r\n        // console.log(\"bs return\",index);\r\n        if(index<0){\r\n            index = - index;\r\n        }\r\n        let dist1 = index>=1?houses[i]-heaters[index-1]:max;\r\n        let dist2 = index<heaters.length?heaters[index]-houses[i]:max;\r\n        // console.log(index,dist1,dist2);\r\n        result = Math.max(result,Math.min(dist1,dist2));\r\n        // console.log(\"result\",result);\r\n    }\r\n    return result;\r\n};"}