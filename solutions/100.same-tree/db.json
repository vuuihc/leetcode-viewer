{"javascript":"/**\r\n * Definition for a binary tree node.\r\n * function TreeNode(val) {\r\n *     this.val = val;\r\n *     this.left = this.right = null;\r\n * }\r\n */\r\n/**\r\n * @param {TreeNode} p\r\n * @param {TreeNode} q\r\n * @return {boolean}\r\n */\r\nvar isSameTree = function(p, q) {\r\n    let current=str1={str:\"\"},str2={str:\"\"};\r\n    let inOrder = (node,direction)=>{\r\n        if(node===null) return;\r\n        if(node.left!==null){\r\n            inOrder(node.left,\"1\");\r\n        }\r\n        current.str+=(direction+node.val);\r\n        if(node.right!==null){\r\n            inOrder(node.right,\"2\");\r\n        }\r\n    }\r\n    let preOrder=(node,direction)=>{\r\n        if(node===null) return;\r\n        current.str+=(direction+node.val);\r\n        if(node.left!==null){\r\n            preOrder(node.left,\"1\");\r\n        }\r\n        if(node.right!==null){\r\n            preOrder(node.right,\"2\");\r\n        }\r\n    }\r\n    inOrder(p,\"0\");\r\n    preOrder(p,\"0\");\r\n    current=str2;\r\n    inOrder(q,\"0\");\r\n    preOrder(q,\"0\");\r\n    console.log(str1.str,str2.str);\r\n    return str1.str===str2.str;\r\n};"}