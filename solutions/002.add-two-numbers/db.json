{"javascript":"/**\r\n * Definition for singly-linked list.\r\n * function ListNode(val) {\r\n *     this.val = val;\r\n *     this.next = null;\r\n * }\r\n */\r\n/**\r\n * @param {ListNode} l1\r\n * @param {ListNode} l2\r\n * @return {ListNode}\r\n */\r\nvar addTwoNumbers = function(l1, l2) {\r\n    // let reverseList = (head)=>{\r\n    //     if(head===null) return head;\r\n    //     let next = head.next,\r\n    //         pre = head;\r\n    //         pre.next = null;\r\n    //     while(next!==null){\r\n    //         let current = next;\r\n    //         next = next.next;\r\n    //         current.next = pre;\r\n    //         pre = current;\r\n    //     }\r\n    //     return pre;\r\n    // }\r\n    let pre=head=l1,c=0,current;\r\n    while(l1!==null && l2!==null){\r\n        pre=l1;\r\n        current = l1.val + l2.val + c;\r\n        c = Math.floor(current/10);\r\n        l1.val = current%10;\r\n        l1=l1.next;\r\n        l2=l2.next;\r\n    }\r\n    if(l2!==null){\r\n        pre.next=l1=l2;\r\n    }\r\n    while(l1!==null){\r\n        pre=l1;\r\n        current = l1.val+c;\r\n        c=Math.floor(current/10);\r\n        l1.val=current%10;\r\n        l1=l1.next;\r\n    }\r\n    if(c===1){\r\n        pre.next = new ListNode(1);\r\n    }\r\n    return head;\r\n};"}